version: '3'

services:
  db:
    restart: always
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - /var/academy-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  api:
    build:
      context: .
      dockerfile: ./production.api.dockerfile
    command: sh -c "celery multi start worker1 -A coretabs && memcached -d -u root -s /tmp/memcached.sock && gunicorn --bind 0.0.0.0:8000 coretabs.wsgi --timeout 90 --log-level=DEBUG"

    volumes:
      - /var/academy-media:/djangoapp/media
    #  - ./src/venv/:/djangoapp/venv/
    environment:
      HOST_ENV: $HOST_ENV
      API_BASE_URL: $API_BASE_URL
      SPA_BASE_URL: $SPA_BASE_URL
      DATABASE_URL: $DATABASE_URL
      DEFAULT_FROM_EMAIL: $DEFAULT_FROM_EMAIL
      DISCOURSE_API_KEY: $DISCOURSE_API_KEY
      DISCOURSE_API_USERNAME: $DISCOURSE_API_USERNAME
      DISCOURSE_BASE_URL: $DISCOURSE_BASE_URL
      DISCOURSE_SSO_SECRET: $DISCOURSE_SSO_SECRET
      EMAIL_HOST: $EMAIL_HOST
      EMAIL_HOST_PASSWORD: $EMAIL_HOST_PASSWORD
      EMAIL_HOST_USER: $EMAIL_HOST_USER
      MANAGERS_EMAILS: $MANAGERS_EMAILS
      SECRET_KEY: $SECRET_KEY
      SENTRY_DSN: $SENTRY_DSN
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

    links:
      - db:db
    ports:
      - "8000:8000"
  spa:
    build:
      context: .
      dockerfile: ./production.spa.dockerfile
      args:
        API_BASE_URL: $API_BASE_URL
        MAINTENANCE_MODE: $MAINTENANCE_MODE
    command: sh -c "npm start"
    ports:
      - "8001:3000"