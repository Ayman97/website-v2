version: '3'

services:
  db:
    restart: always
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - /var/academy-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
  api:
    build:
      context: .
      dockerfile: ./production.api.dockerfile
    command: sh -c "memcached -d -u root -s /tmp/memcached.sock && gunicorn --bind 0.0.0.0:8000 coretabs.wsgi --timeout 90 --log-level=DEBUG"

    volumes:
      - /var/academy-media:/djangoapp/media
    #  - ./src/venv/:/djangoapp/venv/
    environment:
      HOST_ENV: production
      API_BASE_URL: https://api.coretabs.net
      SPA_BASE_URL: https://www.coretabs.net
      DATABASE_URL
      DEFAULT_FROM_EMAIL
      DISCOURSE_API_KEY
      DISCOURSE_API_USERNAME
      DISCOURSE_BASE_URL
      DISCOURSE_SSO_SECRET
      EMAIL_HOST
      EMAIL_HOST_PASSWORD
      EMAIL_HOST_USER
      MANAGERS_EMAILS
      SECRET_KEY
      SENTRY_DSN

    links:
      - db:db
    ports:
      - "8000:8000"
  spa:
    build:
      context: .
      dockerfile: ./production.spa.dockerfile
      args:
        API_BASE_URL: $API_BASE_URL
        MAINTENANCE_MODE: $MAINTENANCE_MODE
    command: sh -c "npm start"
    ports:
      - "8001:3000"